// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import edu.wpi.first.networktables.GenericEntry;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
//import frc.robot.Constants;
import frc.robot.Constants;

import java.util.Map;

import com.revrobotics.CANSparkLowLevel;
import com.revrobotics.CANSparkMax;

///import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;

public class Shooter extends SubsystemBase {

    //private PWMSparkMax shooterMotor;
    private CANSparkMax shooterMotor1;
    private CANSparkMax shooterMotor2;
    

    
    private GenericEntry motor1Speed ;
    private GenericEntry motor2Speed ;
    private double  motor2SpeedDefault = .2;
    private double  motor1SpeedDefault = .4; 

    public Shooter() {
        //shooterMotor = new PWMSparkMax(7);
        shooterMotor1 = new CANSparkMax(Constants.motors.shootermotor1,CANSparkLowLevel.MotorType.kBrushed);
        shooterMotor2 = new CANSparkMax(Constants.motors.shootermotor2, CANSparkLowLevel.MotorType.kBrushed);
        //addChild("Shooter Motor", shooterMotor);
        shooterMotor1.setInverted(false);
        shooterMotor2.setInverted(false);
    
    
        shooterMotor2.follow(shooterMotor1);

        
        motor2Speed = Shuffleboard.getTab("Motors")
                .add("Shooter2 Speed", motor2SpeedDefault)
                .withWidget(BuiltInWidgets.kNumberSlider)
                .withProperties(Map.of("min", 0, "max", 1))
                .getEntry();
                
        motor1Speed = Shuffleboard.getTab("Motors")
        .add("Shooter1 Speed", motor1SpeedDefault)
        .withWidget(BuiltInWidgets.kNumberSlider)
        .withProperties(Map.of("min", 0, "max", 1))
        .getEntry();



    }

    @Override
    public void periodic() {

    }

    @Override
    public void simulationPeriodic() {

    }

    public void Place() 
    {
        shooterMotor1.set(.1);
    }

    public void Launch() {
        
        shooterMotor2.follow(shooterMotor1);
        shooterMotor1.set(1);
        
        }

    public void Stop() 
    {
        shooterMotor1.set(0);
        shooterMotor1.stopMotor();
        shooterMotor2.set(0);
        shooterMotor2.stopMotor();
    }

    public void LaunchLow(){
        // /bottom motor should spin faster to make the note go vertical
        
        
        double speed1 = motor2Speed.getDouble(motor2SpeedDefault);
        double speed2 = motor1Speed.getDouble(motor1SpeedDefault);
        shooterMotor1.set(speed1);
        shooterMotor2.set(speed2);

    }
    public void BackupShoot() 
    {

        shooterMotor1.set(-.25);

    }


}
