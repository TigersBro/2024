// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.SubsystemBase;
//import frc.robot.Constants;

import com.revrobotics.CANSparkLowLevel;
import com.revrobotics.CANSparkMax;

///import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;

public class Shooter extends SubsystemBase {

    //private PWMSparkMax shooterMotor;
    private CANSparkMax shooterMotor;

    public Shooter() {
        //shooterMotor = new PWMSparkMax(7);
        shooterMotor = new CANSparkMax(8,CANSparkLowLevel.MotorType.kBrushed);
        //addChild("Shooter Motor", shooterMotor);
        shooterMotor.setInverted(false);

    }

    @Override
    public void periodic() {

    }

    @Override
    public void simulationPeriodic() {

    }

    public void Place() 
    {
        shooterMotor.set(.1);
    }

    public void Launch() {
        // spin it up slower...but that would take a PID..ooooor
       // shooterMotor.set(.1);
       // try {
          //  wait(25);
          //  shooterMotor.set(.3);
           // wait(25);
           // shooterMotor.set(.5);
           // wait(25);
           // shooterMotor.set(.7);
           // wait(25);
            //shooterMotor.set(.9);
           // wait(25);
            shooterMotor.set(1);
      //  } catch (InterruptedException e) {
      //      e.printStackTrace();
      //  }
    }

    public void Stop() 
    {
        shooterMotor.set(0);
        shooterMotor.stopMotor();
    }
    public void Collect() 
    {

        shooterMotor.set(-.2);

    }
    public void IDontKnow() 
    {

        shooterMotor.set(.2);

    } public void Shoot() 
    {

        shooterMotor.set(1);

    }
    public void BackupShoot() 
    {

        shooterMotor.set(.1);

    }


}
